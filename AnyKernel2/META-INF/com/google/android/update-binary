#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
DIR=`dirname "$ZIPFILE"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    $bb chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
getprop() { test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1; }
cleanup() { rm -rf /tmp/anykernel; }
abort() {
  if [ ! -f /tmp/anykernel/anykernel.sh -o "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanuponabort 2>/dev/null)" == 1 ]; then
    ui_print "$*"; cleanup; umount /system; umount /data; exit 1;
  else
    ui_print "$*"; umount /system; umount /data; exit 1;
  fi;
}

# Actions
show_progress 1.34 4;
ui_print " ";
ui_print " ";
ui_print "                 VERSION 4.0                ";
ui_print  "===========================================";
ui_print "  __                   _        _ _         ";
ui_print " / _\_ __   ___   ___ | | _____(_) |_ _   _ ";
ui_print " \ \| '_ \ / _ \ / _ \| |/ / __| | __| | | |";
ui_print " _\ \ |_) | (_) | (_) |   < (__| | |_| |_| |";
ui_print " \__/ .__/ \___/ \___/|_|\_\___|_|\__|\__, |";
ui_print "    |_|                               |___/ ";
ui_print "                                   _        ";
ui_print "          /\ /\___ _ __ _ __   ___| |       ";
ui_print "         / //_/ _ \ '__| '_ \ / _ \ |       ";
ui_print "        / __ \  __/ |  | | | |  __/ |       ";
ui_print "        \/  \/\___|_|  |_| |_|\___|_|       ";
ui_print "============================================";
ui_print " FOR THE SAMSUNG GALAXY S5-MINI (G800F/M/Y) ";
ui_print " ";
ui_print " ";

cleanup;
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIPFILE";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
ui_print " ";
ui_print "AnyKernel2 by osm0sis @ xda-developers";
ui_print " ";
umount /system 2>/dev/null;
mount -o ro -t auto /system;
mount /data 2>/dev/null;
test -f /system/system/build.prop && root=/system;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
      ui_print "$testname";
      match=1;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
    abort "Unsupported device. Aborting...";
  fi;
fi;

ui_print "Installing kernel...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
  ui_print " ";
  ui_print "Pushing modules...";
  mount -o rw,remount -t auto /system;
  cp -rf /tmp/anykernel/modules/* $root/system/lib/modules/;
  set_perm_recursive 0 0 0755 0644 $root/system/lib/modules;
  mount -o ro,remount -t auto /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
  mount -t auto -o rw,remount /system;
  ui_print "Creating init.d...";
  cp -fvr /tmp/anykernel/system/* /system;
  set_perm_recursive 0 0 0755 0755 /system/etc/init.d;
  mount -t auto -o ro,remount /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.synapse)" == 1 ]; then
  mount -t auto -o rw,remount /system;
    ui_print "Extracting Synapse files...";
  if [ -f /system/addon.d/999-customkernel.sh ]; then
    ui_print "Removing old survival script...";
    rm -rf /system/addon.d/999-customkernel.sh;
    echo 0 > /data/UKM/files/survival;
  fi;
  ui_print "Installing Synapse...";
  cp -fvr /tmp/anykernel/system/* /system;
  set_perm_recursive 0 0 755 644 /system/priv-app;
  mount -t auto -o ro,remount /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.sqlite)" == 1 ]; then
  mount -t auto -o rw,remount /system;
  ui_print "Updating Sqlite3...";
  cp -fvr /tmp/anykernel/system/xbin/sqlite3 /system/xbin/sqlite3;
  set_perm_recursive 0 0 755 755 /system/xbin;
  mount -t auto -o ro,remount /system;
fi;

case $(basename "$ZIPFILE" .zip) in
  *-debugging)
    ui_print " ";
    ui_print "Creating debugging archive in zip directory...";
    $bb tar -czvf "$DIR/anykernel2-$(date +%Y-%m-%d_%H%M%S)-debug.tgz" /tmp/*;
  ;;
esac;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
  cleanup;
fi;

umount /system;
umount /data;
ui_print " ";
ui_print "Done!";
